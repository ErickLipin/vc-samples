{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "southafricanorth",
        "southafricawest"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "endpointUrl": {
      "type": "string"
    },
    "endpointUsername": {
      "type": "securestring"
    },
    "endpointPassword": {
      "type": "securestring"
    },
    "sendgrid_1_Connection_Name": {
      "type": "string",
      "defaultValue": "sendgrid-2"
    },
    "sendgrid_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Test2"
    },
    "sendgrid_1_apiKey": {
      "type": "securestring",
      "metadata": {
        "description": "SendGrid Api Key"
      }
    },
    "sendgrid_2_Connection_Name": {
      "type": "string",
      "defaultValue": "sendgrid"
    },
    "sendgrid_2_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "SendGridTestConnection"
    },
    "sendgrid_2_apiKey": {
      "type": "securestring",
      "metadata": {
        "description": "SendGrid Api Key"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "InitOrderStatus": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "orderStatus",
                    "type": "String",
                    "value": "Processing"
                  }
                ]
              },
              "runAfter": {}
            },
            "InitOrderId": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "orderId",
                    "type": "String"
                  }
                ]
              },
              "runAfter": {
                "InitOrderStatus": [
                  "Succeeded"
                ]
              }
            },
            "InitServedOrdersArray": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "servedOrdersArray",
                    "type": "Array"
                  }
                ]
              },
              "runAfter": {
                "InitOrderId": [
                  "Succeeded"
                ]
              }
            },
            "GetToken": {
              "type": "Http",
              "inputs": {
                "method": "POST",
                "uri": "@{concat(parameters('endpointUrl'),'connect/token')}",
                "headers": {
                  "Content-Type": "application/x-www-form-urlencoded"
                },
                "body": "@concat('grant_type=password&password=', encodeUriComponent(parameters('endpointPassword')), '&username=', encodeUriComponent(parameters('endpointUsername')))"
              },
              "runAfter": {
                "InitServedOrdersArray": [
                  "Succeeded"
                ]
              }
            },
            "ParseToken": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('GetToken')",
                "schema": {
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "integer"
                    },
                    "token_type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "GetToken": [
                  "Succeeded"
                ]
              }
            },
            "OrderModule_Search": {
              "type": "Http",
              "inputs": {
                "method": "post",
                "headers": {
                  "Authorization": "Bearer @{body('ParseToken')?['access_token']}",
                  "Content-Type": "application/json"
                },
                "body": {
                  "status": "New",
                  "responseGroup": "Full",
                  "skip": 0,
                  "take": 20
                },
                "uri": "@{concat(parameters('endpointUrl'), '/api/order/customerOrders/search')}"
              },
              "runAfter": {
                "ParseToken": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "apiDefinitionUrl": "@{concat(parameters('endpointUrl'), '/docs/VirtoCommerce.Orders/swagger.json')}",
                "swaggerSource": "custom"
              }
            },
            "For_each_customerOrders": {
              "type": "Foreach",
              "foreach": "@body('OrderModule_Search')?['customerOrders']",
              "actions": {
                "Set_variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "orderId",
                    "value": "@items('For_each_customerOrders')['id']"
                  },
                  "runAfter": {}
                },
                "OrderModule_GetById": {
                    "type": "Http",
                    "inputs": {
                        "method": "get",
                        "headers": {
                            "Authorization": "Bearer @{body('ParseToken')?['access_token']}",
                            "Content-Type": "application/json"
                        },
                        "uri": "@{concat(parameters('endpointUrl'), 'api/order/customerOrders/', variables('orderId'))}"
                            
                    },
                    "runAfter": {
                        "Set_variable": [
                            "Succeeded"
                        ]
                    },
                    "metadata": {
                        "apiDefinitionUrl": "@{concat(parameters('endpointUrl'), '/docs/VirtoCommerce.Orders/swagger.json')}",
                        "swaggerSource": "custom"
                    }
                },
                "Compose": {
                  "type": "Compose",
                  "inputs": "@setProperty(body('OrderModule_getById'),'status',variables('orderStatus'))",
                  "runAfter": {
                    "OrderModule_GetById": [
                      "Succeeded"
                    ]
                  }
                },
                "HTTP": {
                  "type": "Http",
                    "inputs": {
                        "method": "PUT",
                        "uri": "@{concat(parameters('endpointUrl'), '/api/order/customerOrders')}",
                        "headers": {
                            "Authorization": "Bearer @{body('ParseToken')?['access_token']}",
                            "Content-Type": "application/json"
                        },
                        "body": "@outputs('Compose')"
                    },
                  "runAfter": {
                    "Compose": [
                      "Succeeded"
                    ]
                  }
                },
                "Append_to_servedOrdersArray": {
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "servedOrdersArray",
                    "value": "@items('For_each_customerOrders')['number']"
                  },
                  "runAfter": {
                    "HTTP": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "OrderModule_Search": [
                  "Succeeded"
                ]
              }
            },
            "Send_email": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sendgrid_1']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "from": "orders@virtoway.com",
                  "to": "your@emal.com",
                  "subject": "New orders creted",
                  "text": "@string(variables('servedOrdersArray'))",
                  "ishtml": true
                },
                "path": "/mail/send"
              },
              "runAfter": {
                "For_each_customerOrders": [
                  "Succeeded"
                ]
              }
            },
            "HTTP_retry_policy": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "http://httpbin.org/status/429",
                "retryPolicy": {
                  "type": "fixed",
                  "count": 4,
                  "interval": "PT15S"
                }
              },
              "runAfter": {
                "Send_email": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "endpointUrl": {
              "type": "string"
            },
            "endpointUsername": {
              "type": "securestring"
            },
            "endpointPassword": {
              "type": "securestring"
            }
          },
          "triggers": {
            "Recurrence": {
              "type": "Recurrence",
              "recurrence": {
                "frequency": "Minute",
                "interval": 5
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "sendgrid_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'sendgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sendgrid_2_Connection_Name'))]",
                "connectionName": "[parameters('sendgrid_2_Connection_Name')]"
              }
            }
          },
          "endpointUrl": {
            "value": "[parameters('endpointUrl')]"
          },
          "endpointUsername": {
            "value": "[parameters('endpointUsername')]"
          },
          "endpointPassword": {
            "value": "[parameters('endpointPassword')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('sendgrid_2_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('sendgrid_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'sendgrid')]"
        },
        "displayName": "[parameters('sendgrid_1_Connection_DisplayName')]",
        "parameterValues": {
          "apiKey": "[parameters('sendgrid_1_apiKey')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('sendgrid_2_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'sendgrid')]"
        },
        "displayName": "[parameters('sendgrid_2_Connection_DisplayName')]",
        "parameterValues": {
          "apiKey": "[parameters('sendgrid_2_apiKey')]"
        }
      }
    }
  ],
  "outputs": {}
}
